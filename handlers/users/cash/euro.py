import random

from aiogram.types import Message

from config import euro_price, set_euro_price, bot_name
from keyboard.generate import show_balance_kb
from keyboard.cash import euro_kb, my_euro_kb
from utils.main.cash import get_cash, to_str
from utils.main.db import sql
from utils.main.euro import Euro, euro_to_usd


async def euro_handler(message: Message):
    arg = message.text.split()[1:] if not bot_name.lower() in message.text.split()[0].lower() else message.text.split()[2:]
    euro = Euro(owner=message.from_user.id)

    if len(arg) == 0 or arg[0].lower() in ['–º–æ—è', '–º–æ–∏', '–º–∏', '–º–æ–π']:
        return await message.reply(euro.text, reply_markup=euro_kb)
    elif arg[0].lower() in ['–∫—É–ø–∏—Ç—å', '–ø–æ–ø–æ–ª–Ω–∏—Ç—å', '–ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏',
                            '—Å–∫—É–ø–∏—Ç—å', '–¥–µ–ø–æ–∑–∏—Ç', '–¥–µ–ø']:
        if len(arg) < 2:
            return await message.reply('‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>–ï–≤—Ä–æ –∫—É–ø–∏—Ç—å {–∫–æ–ª-–≤–æ}</code>',
                                       reply_markup=my_euro_kb)
        try:
            xa = sql.execute(f'SELECT bank FROM users WHERE id = {message.from_user.id}', False, True)[0][0]
            summ = get_cash(arg[1]) if arg[1].lower() not in ['–≤—Å—ë', '–≤—Å–µ'] else int(xa / euro_to_usd(1))
            if summ <= 0:
                raise Exception('123')
        except:
            return await message.reply('üö´ –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥!')
        if (summ + euro.balance) > euro.spaciousness:
            return await message.reply('üö´ –í—ã –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏–º–∏—Ç –≤–∞—à–µ–≥–æ —Å–µ–π—Ñ–∞!')
        user_summ = euro_to_usd(summ)

        if user_summ > xa:
            return await message.reply(f'‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –≤ –±–∞–Ω–∫–µ! –ù—É–∂–Ω–æ: {to_str(user_summ)}',
                                       reply_markup=show_balance_kb)

        sql.executescript(f'UPDATE euro SET balance = balance + {summ} WHERE owner = {message.from_user.id};\n'
                          f'UPDATE users SET bank = bank - {user_summ} WHERE id = {message.from_user.id};',
                          True, False)

        await message.reply(f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ {summ} –µ–≤—Ä–æ –∑–∞ {to_str(user_summ)}',
                            reply_markup=my_euro_kb)

        now = euro_price() + int(summ * random.choice([0.01, 0.05, 0.04, 0.03, 0]))

        await set_euro_price(now)

        return

    elif arg[0].lower() in ['–ø—Ä–æ–¥–∞—Ç—å', '—Å–Ω—è—Ç—å', '–æ–±–º–µ–Ω—è—Ç—å']:
        try:
            if arg[1].isdigit():
                summ = get_cash(arg[1])
            else:
                raise Exception('123')
        except:
            summ = euro.balance
        if summ <= 0:
            return await message.reply('üò¥ –ö–æ–ª-–≤–æ EURO –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ –Ω—É–ª—é!')
        elif summ > euro.balance:
            return await message.reply('üò¥ –ö–æ–ª-–≤–æ EURO –±–æ–ª—å—à–µ —á–µ–º –±–∞–ª–∞–Ω—Å —Å–µ–π—Ñ–∞!')

        now = euro_price() - int(summ * 0.05)

        await set_euro_price(now)

        user_summ = euro_to_usd(summ)

        sql.executescript(f'UPDATE euro SET balance = balance - {summ} WHERE owner = {message.from_user.id};\n'
                          f'UPDATE users SET bank = bank + {user_summ} WHERE id = {message.from_user.id};',
                          True, False)

        await message.reply(f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ {to_str(user_summ)} —Å —Å–µ–π—Ñ–∞!')

        return

    elif arg[0].lower() in ['—É–ª—É—á—à', '—É–ª—É—á—à–∏—Ç—å', 'boost',
                            '–±—É—Å—Ç', '–ø–æ–≤—ã—Å–∏—Ç—å']:
        xa = sql.execute(f'SELECT bank FROM users WHERE id = {message.from_user.id}', False, True)[0][0]
        price = 100000 * euro.level
        if xa < price:
            return await message.reply(f'üö´ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –≤ –±–∞–Ω–∫–µ –¥–ª—è –±—É—Å—Ç–∞, –Ω—É–∂–Ω–æ: {to_str(price)}',
                                       reply_markup=my_euro_kb)

        sql.executescript(f'UPDATE users SET bank = bank - {price} WHERE id = {message.from_user.id};\n'
                          f'UPDATE euro SET level = level + 1 WHERE owner = {message.from_user.id};')
        return await message.reply(f'ü•´ –í—ã —É–ª—É—á—à–∏–ª–∏ —Å–≤–æ–π —Å–µ–π—Ñ EURO –∏ —Ç–µ–ø–µ—Ä—å –æ–Ω –≤–º–µ—â–∞–µ—Ç: '
                                   f'{to_str((euro.level + 1) * 1000)}',
                                   reply_markup=my_euro_kb)
