from aiogram.types import Message

from config import bot_name
from keyboard.generate import show_balance_kb
from utils.logs import writelog
from utils.main.cash import to_str, get_cash
from utils.main.users import User


async def pay_handler(message: Message):
    arg = message.text.split()[1:] if not bot_name.lower() in message.text.split()[0].lower() else message.text.split()[2:]
    if len(arg) == 0:
        return await message.reply('‚ùå –û—à–∏–±–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>(–ø–µ—Ä–µ–¥–∞—Ç—å/–¥–∞—Ç—å) {<i>—Å—É–º–º–∞</i>} <b>*{—Å—Å—ã–ª–∫–∞}</b>')
    user = User(user=message.from_user)

    try:
        summ = abs(get_cash(arg[0].lower().replace('–≤—Å—ë', str(user.balance)).replace('–≤—Å–µ', str(user.balance))))
        if summ <= 0:
            raise Exception('123')
    except:
        return await message.reply('‚ùå –û—à–∏–±–∫–∞. –ù–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω–∞ —Å—É–º–º–∞!')
    if len(arg) == 2 and '@' not in arg[1]:
        return await message.reply('‚ùå –û—à–∏–±–∫–∞. –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∫–æ–º—É –ø–µ—Ä–µ–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏!')
    elif len(arg) == 1 and not message.reply_to_message:
        return await message.reply('‚ùå –û—à–∏–±–∫–∞. –í—ã –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º—É –ø–µ—Ä–µ–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏!')
    elif len(arg) == 2:
        try:
            to_user = User(username=arg[1].replace('@', ''))
        except:
            return await message.reply(f'‚ùå –û—à–∏–±–∫–∞. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <code>{arg[1]}</code> –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!',
                                       disable_web_page_preview=True)
    elif message.reply_to_message:
        to_user = User(user=message.reply_to_message.from_user)
    else:
        return await message.reply('‚ùå –û—à–∏–±–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>(–ø–µ—Ä–µ–¥–∞—Ç—å/–¥–∞—Ç—å) {<i>—Å—É–º–º–∞</i>} <b>*{—Å—Å—ã–ª–∫–∞}</b>')

    if user.id == to_user.id:
        return await message.reply('‚ùå –û—à–∏–±–∫–∞. –°–∞–º–æ–º—É —Å–µ–±–µ –Ω–µ–ª—å–∑—è –ø–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç!')

    if user.balance < summ:
        return await message.reply('‚ùå –û—à–∏–±–∫–∞. –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ —Ä—É–∫–∞—Ö! üí∏',
                                   reply_markup=show_balance_kb)
    to_user.edit('balance', to_user.balance + summ)
    user.edit('balance', user.balance - summ)
    await message.reply(f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–ª–∏ {to_str(summ)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {to_user.link}',
                        disable_web_page_preview=True,
                        reply_markup=show_balance_kb)
    await writelog(message.from_user.id, f'–ü–µ—Ä–µ–¥–∞—á–∞ {to_str(summ)} —é–∑–µ—Ä—É {to_user.link}')
    return
