from aiogram.types import Message

from config import bot_name
from utils.items.items import items
from utils.logs import writelog
from utils.main.cash import to_str, get_cash
from utils.main.users import User
from utils.promo.promo import Promocode, all_promo


async def activatepromo_handler(message: Message):
    arg = message.text.split()[1:] if not bot_name.lower() in message.text.split()[0].lower() else message.text.split()[2:]
    if len(arg) == 0:
        return await message.reply('‚ùå –û—à–∏–±–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>–ü—Ä–æ–º–æ {–∫–æ–¥}</code> —á—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥!')
    promo = arg[0].lower()
    if promo == '—Å–æ–∑–¥–∞—Ç—å':
        arg = arg[1:]
        if len(arg) < 3 or not arg[1].isdigit() or not arg[2].isdigit():
            return await message.reply('üö´ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>–ü—Ä–æ–º–æ —Å–æ–∑–¥–∞—Ç—å {–Ω–∞–∑–≤–∞–Ω–∏–µ} {—Å—É–º–º–∞} {–∞–∫—Ç–∏–≤–∞—Ü–∏–∏}</code>')
        try:
            name = arg[0].lower()
            price = abs(get_cash(arg[1]))
            acts = abs(int(arg[2]))
            if price <= 1000 or acts <= 0:
                raise Exception('123')
        except:
            return await message.reply('üö´ –ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—É–º–º—ã –∏–ª–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–π! (–º–∏–Ω. <code>$1,000</code> –∏ 1 '
                                       '–∞–∫—Ç–∏–≤–∞—Ü–∏—è)')
        user = User(user=message.from_user)
        if user.balance < price*acts:
            return await message.reply(f'üö´ –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–∫–æ–≥–æ –ø—Ä–æ–º–æ–∫–æ–¥–∞, –Ω—É–∂–Ω–æ: {to_str(price*acts)}')
        elif name in all_promo():
            return await message.reply('üö´ –¢–∞–∫–æ–π –ø—Ä–æ–º–æ–∫–æ–¥ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ!')
        user.edit('balance', user.balance - price*acts)

        Promocode.create(name, acts, price, 1)
        return await message.reply(f'ü™Ñ –ü—Ä–æ–º–æ–∫–æ–¥ <code>{name}</code> –Ω–∞ —Å—É–º–º—É {to_str(price)} –∏ –∫–æ–ª-–≤–æ –∞–∫—Ç–∏–≤–∞—Ü–∏–π'
                                   f' <b>{acts}</b> —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω (-{to_str(price*acts)} —Å –±–∞–ª–∞–Ω—Å–∞)')
    try:
        if promo not in all_promo():
            raise Exception('123')
        promo = Promocode(promo)
    except:
        return await message.reply('‚ùå –û—à–∏–±–∫–∞. –ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω!')

    if message.from_user.id in promo.users:
        return await message.reply('üôÉ –í—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥!')
    elif len(promo.users) >= promo.activations:
        return await message.reply('ü™Ñ –ê–∫—Ç–∏–≤–∞—Ü–∏–∏ —É –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å!')

    promo.add_user(message.from_user.id)
    item = items.get(promo.summ)
    user = User(user=message.from_user)
    if item is not None:
        user.items = list(user.items)
        user.set_item(item_id=promo.summ, x=promo.xd)
        await message.reply(f'‚úÖ –í—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥ –∏ –ø–æ–ª—É—á–∏–ª–∏:\n<b>{item["name"]} {item["emoji"]}</b> (x'
                            f'{promo.xd}) - '
                            f'{to_str(item["sell_price"])}')
        await writelog(message.from_user.id, f'–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ {promo}')
        return

    user.edit('balance', user.balance + promo.summ)
    await message.reply(f'‚úÖ –í—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥ –∏ –ø–æ–ª—É—á–∏–ª–∏ +{to_str(promo.summ)}')
    await writelog(message.from_user.id, f'–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ {promo}')
    return
