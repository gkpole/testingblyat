import random
from datetime import datetime
from hashlib import md5
from json import loads
from urllib.parse import urlencode

import aiohttp
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.types import Message, CallbackQuery

from config import donates, payok_api_key, payok_api_id, payok_shop_id, payok_secret, freekassa_shop_id, \
    coins_obmen_enabled, payok, freekassa, bot_name
from keyboard.main import donate_kb, link_to_owner, donate_kbi, check_ls_kb, back_donate, oplata_kb, oplata_url_kb, \
    donates_kb
from utils.freekassa import secrets
from utils.main.cash import to_str, get_cash
from utils.main.users import User


async def donate_handler(message: Message):
    text = '''üìÉ –°–ø–∏—Å–æ–∫ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–π –≤ –±–æ—Ç–µ:
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
<b>üíé VIP</b> (<code>150 ü™ô</code>):
<i>–ü–∏—Å–∞—Ç—å @Cut1eb1tch</i>
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
<b>ü•ã JUNIOR</b> (<code>1000 ü™ô</code>)::
<i>–ü–∏—Å–∞—Ç—å @Cut1eb1tch</i>    
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
<b>‚ù§Ô∏è‚Äçüî• ADMIN</b> (<code>5000 ü™ô</code>):
<i>–ü–∏—Å–∞—Ç—å @Cut1eb1tch</i>    
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
<b>üëª –£–Ω–∏–∫</b> (<code>10000 ü™ô</code>):
<i>–ü–∏—Å–∞—Ç—å @Cut1eb1tch</i>    
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
<i>–ö—É—Ä—Å –æ–±–º–µ–Ω–∞ –∫–æ–∏–Ω->–¥–æ–ª–ª–∞—Ä</i>
<code>$100,000</code> = 1ü™ô
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
<b>–î–ª—è –ø–æ–∫—É–ø–∫–∏ –ø–∏—Å–∞—Ç—å –≤–∞—Å—Ç–µ—Ä—É –∏ –∂–¥–∞—Ç—å –ø–æ–∫–∞ –æ—Ç–≤–µ—Ç—è—Ç –≤ —Ç–µ—á–µ–Ω–∏–∏ 2 —á–∞—Å–æ–≤ –æ—Ç 12:00 ‚Äî 23:00
<b>–ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—è @h1neky</b>
<b>–£–¥–∞—á–Ω–æ–π –∏–≥—Ä—ã!</b>'''

    if message.text.lower().startswith('–∫—É–ø–∏—Ç—å') and len(message.text.split()) > 1:
        return await privilegia_handler(message)

    try:
        await message.bot.send_message(
            chat_id=message.from_user.id,
            text=text,
            reply_markup=donate_kbi,
        disable_web_page_preview=True)
        if message.chat.id != message.from_user.id:
            return await message.reply('‚úàÔ∏è –Ø –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∞–º –≤ –ª—Å –î–û–ù–ê–¢-–ú–ï–ù–Æ!')
    except:
        return await message.reply(text='üíé –Ø –Ω–µ –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–º –≤ –ª—Å –¥–æ–Ω–∞—Ç-–º–µ–Ω—é, –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ —á—Ç–æ-—Ç–æ!',
                                   reply_markup=check_ls_kb)


async def zadonatit_handler(message: Message):
    try:
        if isinstance(message, Message):
            message = message
            call = None
        else:
            call = message

        if call:
            return await call.message.edit_text(text='üíé –í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã:', reply_markup=donates_kb,
                                                disable_web_page_preview=True)
        else:
            await message.bot.send_message(
                chat_id=message.from_user.id,
                text='üíé –í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã:', reply_markup=donates_kb,
                disable_web_page_preview=True)
            return await message.reply('‚úàÔ∏è –Ø –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∞–º –≤ –ª—Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –¥–æ–Ω–∞—Ç–∞!')
    except:
        return await message.reply('üçÅ –ù–µ –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–±–µ –≤ –ª—Å –Ω–∏—á–µ–≥–æ, –Ω–∞–ø–∏—à–∏ –≤ –ª—Å –±–æ—Ç–∞!')


async def other_method_handler(call: CallbackQuery):
    text = '<b>–ú–ï–ù–Æ –î–û–ù–ê–¢–ê</b>\n\n' \
           '‚Ä¢ –î–ª—è –ø–æ–∫—É–ø–∫–∏ –ø–∏—Å–∞—Ç—å @vaster_o\n' \
           '<i>–ö—É—Ä—Å 1ü™ô = 1RUB</i>\n' \
           '–°–∫–∏–¥–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞!\n' \
           '‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n' \
           f'ü™ô –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –æ–±–º–µ–Ω—è—Ç—å –∏–≥—Ä–æ–≤—ã–µ –¥–µ–Ω—å–≥–∏ –Ω–∞ –∫–æ–∏–Ω—ã <code>–û–±–º–µ–Ω—è—Ç—å {–∫–æ–ª-–≤–æ} </code>' \
           f' {to_str(1000000000)} = 1ü™ô' \
           '</i>'
    return await call.message.edit_text(text=text,
                                        reply_markup=back_donate)


class Payok(StatesGroup):
    start = State()


async def payok_handler(call: CallbackQuery):
    if not payok:
        return await call.answer('‚õî –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã –æ—Ç–∫–ª—é—á—ë–Ω!')
    text = 'ü™ô –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–ª-–≤–æ –∫–æ–∏–Ω–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–¥–æ–Ω–∞—Ç–∏—Ç—å'
    await Payok.start.set()
    return await call.message.edit_text(text=text,
                                        reply_markup=back_donate)


async def payok_check(call: CallbackQuery):
    order_id = int(call.data.split('_')[1])
    api = payok_api_key
    url = 'https://payok.io/api/transaction'
    async with aiohttp.ClientSession() as session:
        data = {
            'API_ID': payok_api_id,
            'API_KEY': api,
            'shop': payok_shop_id,
            'payment': order_id,
        }
        response = await session.post(url=url, data=data)
        json = loads(await response.text())
        if json["status"] != 'success' or int(json['1']['transaction_status']) != 1:
            return await call.answer('üßô –°—á—ë—Ç –Ω–µ –æ–ø–ª–∞—á–µ–Ω!', show_alert=True)
        else:
            user = User(user=call.from_user)
            x = int(json['1']['amount'])
            user.edit('coins', user.coins + x)
            return await call.message.edit_text(text=f'‚úÖ –ù–∞ –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω–æ +{x} COINS!')


async def payok_step1(message: Message, state):
    await state.finish()
    if not message.text.isdigit() or int(message.text) <= 0:
        return await message.reply('‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞!')
    summ = int(message.text.split()[0])

    payment = int("".join(random.choice('0123456789') for _ in range(random.randint(4, 16))))
    desc = f'–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ_{summ}RUB'
    data = {'amount': str(summ),
            'payment': str(payment),
            'shop': f'{payok_shop_id}',
            'currency': 'RUB',
            'desc': desc,
            'secret': f'{payok_secret}'
            }
    sign = md5('|'.join(data.values()).encode()).hexdigest()

    data.update({'sign': sign})
    del data['secret']

    url = 'https://payok.io/pay?' + urlencode(data)
    text = f'üíé –í–∞—à —Å—á—ë—Ç –Ω–∞ <b>{summ}RUB</b> —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!\n' \
           f'–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ <a href="{url}">—Å—Å—ã–ª–∫–µ</a> —á—Ç–æ–±—ã –æ–ø–ª–∞—Ç–∏—Ç—å.\n\n' \
           f'–í–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã? –ü–∏—à–∏—Ç–µ –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—é'
    return await message.reply(text=text,
                               reply_markup=oplata_kb(payment, url))


class Freekassa(StatesGroup):
    start = State()


async def freekassa_handler(call: CallbackQuery):
    if not freekassa:
        return await call.answer('‚õî –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã –æ—Ç–∫–ª—é—á—ë–Ω!')
    text = 'ü™ô –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–ª-–≤–æ –∫–æ–∏–Ω–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–¥–æ–Ω–∞—Ç–∏—Ç—å'
    await Freekassa.start.set()
    return await call.message.edit_text(text=text,
                                        reply_markup=back_donate)


async def freekassa_step1(message: Message, state):
    await state.finish()
    if not message.text.isdigit() or int(message.text) <= 0:
        return await message.reply('‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞!')
    summ = int(message.text.split()[0])
    data = {
        "m": freekassa_shop_id,
        "oa": summ,
        "currency": "RUB",
        "o": f'{message.from_user.id}',
        'lang': 'ru'
    }
    sign = md5(':'.join([f"{freekassa_shop_id}", str(summ), secrets[0], "RUB", data['o']]).encode()).hexdigest()

    data.update({'s': sign})

    url = 'https://pay.freekassa.ru/?' + urlencode(data)
    text = f'üíé –í–∞—à —Å—á—ë—Ç –Ω–∞ <b>{summ}RUB</b> —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!\n' \
           f'–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ <a href="{url}">—Å—Å—ã–ª–∫–µ</a> —á—Ç–æ–±—ã –æ–ø–ª–∞—Ç–∏—Ç—å.\n\n' \
           f'–í–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã? –ü–∏—à–∏—Ç–µ –æ—Å–Ω–æ–≤–∞—Ç–µ–ª—é'
    return await message.reply(text=text,
                               reply_markup=oplata_url_kb(url))


async def privilegia_handler(message: Message):
    arg = message.text.split()[1:] if not bot_name.lower() in message.text.split()[0].lower() else message.text.split()[2:]
    arg = arg[0].lower()
    if 'vip' in arg or '–≤–∏–ø' in arg:
        priva = 1
    elif 'prem' in arg or '–ø—Ä–µ–º' in arg:
        priva = 2
    elif '–∞–¥–º' in arg or 'adm' in arg:
        priva = 3
    elif '—É–Ω–∏–∫' in arg or 'unik' in arg:
        priva = 5
    else:
        return await message.reply('‚ùå –¢–∞–∫–æ–π –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!')

    item = donates[priva]
    user = User(user=message.from_user)
    donate = user.donate
    if user.coins < item["price"]:
        return await message.reply(f'ü™ô –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–∏–Ω–æ–≤, –Ω—É–∂–Ω–æ: <code>{item["price"]}</code>',
                                   reply_markup=donate_kb if message.chat.id != message.from_user.id else donate_kbi)
    elif donate and donate.id >= priva:
        return await message.reply('‚ûñ –£ –≤–∞—Å –∏ —Ç–∞–∫ —Ç–∞–∫–∞—è –ø—Ä–∏–≤–∏–ª–µ–≥–∏—è –∏–ª–∏ –≤—ã—à–µ!')

    user.editmany(donate_source=f'{priva},{datetime.now().strftime("%d-%m-%Y %H:%M")}',
                  coins=user.coins - item['price'])

    await message.reply(f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏—é <b>{item["name"]}</b> –∑–∞ {item["price"]}ü™ô')

    if priva > 2:
        pass


async def cobmen_handler(message: Message):
    arg = message.text.split()[1:] if not bot_name.lower() in message.text.split()[0].lower() else message.text.split()[2:]
    if len(arg) == 0:
        return await message.reply('‚ùå –í–≤–µ–¥–∏—Ç–µ: <code>–ö–æ–±–º–µ–Ω—è—Ç—å {–∫–æ–ª-–≤–æ –∫–æ–∏–Ω–æ–≤}</code>')
    try:
        summ = abs(get_cash(arg[0]))
        if summ == 0:
            raise Exception('123')
    except:
        return await message.reply('‚ùå –í–≤–µ–¥–∏—Ç–µ: <code>–ö–æ–±–º–µ–Ω—è—Ç—å {–∫–æ–ª-–≤–æ –∫–æ–∏–Ω–æ–≤}</code>')

    user = User(user=message.from_user)
    if user.coins < summ:
        return await message.reply(f'ü™ô –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–∏–Ω–æ–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ, –Ω—É–∂–Ω–æ <code>{summ}</code> –∞ —É –≤–∞—Å '
                                   f'<code>{user.coins}</code>',
                                   reply_markup=donate_kb if message.chat.id != message.from_user.id else donate_kbi)

    user.editmany(coins=user.coins - summ,
                  balance=user.balance + summ * 100000)

    return await message.reply(f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –æ–±–º–µ–Ω—è–ª–∏ {summ} –∫–æ–∏–Ω–æ–≤ –Ω–∞ {to_str(summ * 100000)}')


async def obmen_handler(message: Message):
    arg = message.text.split()[1:] if not bot_name.lower() in message.text.split()[0].lower() else message.text.split()[2:]
    if len(arg) == 0:
        return await message.reply('‚ùå –í–≤–µ–¥–∏—Ç–µ: <code>–û–±–º–µ–Ω—è—Ç—å {–∫–æ–ª-–≤–æ $}</code>')

    user = User(user=message.from_user)

    try:
        summ = abs(get_cash(arg[0] if arg[0].lower() not in ['–≤—Å—ë', '–≤—Å–µ'] else str(user.balance)))
        if summ == 0:
            raise Exception('123')
    except:
        return await message.reply('‚ùå –í–≤–µ–¥–∏—Ç–µ: <code>–û–±–º–µ–Ω—è—Ç—å {–∫–æ–ª-–≤–æ $}</code>')

    if user.balance < summ:
        return await message.reply(f'üí≤ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ $ –Ω–∞ —Ä—É–∫–∞—Ö, –Ω—É–∂–Ω–æ {to_str(summ)} –∞ —É –≤–∞—Å '
                                   f'<code>{user.balance}</code>')

    coins = summ // 1000000000
    if coins <= 0:
        return await message.reply('üí≤ –≠—Ç–æ–π —Å—É–º–º—ã –Ω–µ —Ö–≤–∞—Ç–∏—Ç –¥–∞–∂–µ –Ω–∞ 1 –∫–æ–∏–Ω!')

    if not coins_obmen_enabled:
        return await message.reply('üëª –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º.')

    price = coins * 1000000000

    user.editmany(coins=user.coins + coins,
                  balance=user.balance - price)

    return await message.reply(f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –æ–±–º–µ–Ω—è–ª–∏ {to_str(price)} –Ω–∞ {coins} ü™ô')


async def percent_buy_handler(message: Message):
    arg = message.text.split()[1:] if not bot_name.lower() in message.text.split()[0].lower() else message.text.split()[2:]
    user = User(user=message.from_user)

    if len(arg) == 0:
        x = f'+{user.donate.percent}' if user.donate else ""
        return await message.reply(f'üòê –í–∞—à –ø—Ä–æ—Ü–µ–Ω—Ç: {user.percent}{x}%/10\n'
                                   '–í–≤–µ–¥–∏—Ç–µ: <code>–ü—Ä–æ—Ü–µ–Ω—Ç {–∫–æ–ª-–≤–æ}</code> —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å')
    try:
        summ = abs(get_cash(arg[0]))
        if summ == 0:
            raise Exception('123')
    except:
        return await message.reply('‚ùå –í–≤–µ–¥–∏—Ç–µ: <code>–ü—Ä–æ—Ü–µ–Ω—Ç {–∫–æ–ª-–≤–æ}</code>')

    price = summ * 200

    if price > user.coins:
        return await message.reply(f'ü™ô –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–∏–Ω–æ–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ, –Ω—É–∂–Ω–æ <code>{price}</code> –∞ —É –≤–∞—Å '
                                   f'<code>{user.coins}</code>',
                                   reply_markup=donate_kb if message.chat.id != message.from_user.id else donate_kbi)

    if (summ + user.percent) > 10:
        return await message.reply(f'ü™ô –ë—É–¥–µ—Ç –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –¥–æ–Ω–∞—Ç-–ø—Ä–æ—Ü–µ–Ω—Ç–∞, —É –≤–∞—Å: '
                                   f'<code>{user.percent}</code>/10',
                                   reply_markup=donate_kb if message.chat.id != message.from_user.id else donate_kbi)

    user.editmany(coins=user.coins - price,
                  percent=user.percent + summ)

    return await message.reply(f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ +{summ}% –∫ –¥–µ–ø–æ–∑–∏—Ç–Ω–æ–π —Å—Ç–∞–≤–∫–µ –∑–∞ {price}ü™ô')
