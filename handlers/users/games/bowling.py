from aiogram.types import Message

from config import bot_name
from keyboard.games import play_bowling_kb
from keyboard.generate import show_balance_kb
from utils.main.cash import get_cash, to_str
from utils.main.users import User


async def bowling_handler(message: Message):
    arg = message.text.split()[1:] if not bot_name.lower() in message.text.split()[0].lower() else message.text.split()[2:]
    if len(arg) < 1:
        return await message.reply('‚ùå –û—à–∏–±–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>–ë–æ—É–ª–∏–Ω–≥ {<i>—Å—Ç–∞–≤–∫–∞</i>}</code>')

    user = User(user=message.from_user)

    try:
        summ = get_cash(arg[0] if arg[0].lower() not in ['–≤—Å—ë', '–≤—Å–µ'] else str(user.balance))
    except:
        summ = 0
    if summ <= 0:
        return await message.reply('‚ùå –û—à–∏–±–∫–∞. –°—Ç–∞–≤–∫–∞ –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–∞ –Ω—É–ª—é')

    if user.balance < summ:
        return await message.reply('‚ùå –û—à–∏–±–∫–∞. –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ —Ä—É–∫–∞—Ö –¥–ª—è —Å—Ç–∞–≤–∫–∏! üí∏',
                                   reply_markup=show_balance_kb)

    bow = await message.reply_dice('üé≥')
    bow = bow.dice.value

    if bow in [1, 2, 3, 4]:
        user.edit('balance', user.balance - summ)
        return await message.reply(f'üëéüèø –í—ã –ø—Ä–æ–µ–±–∞–ª–∏ {to_str(summ)}',
                                   reply_markup=play_bowling_kb)
    elif bow == 5:
        price = int(summ * float(f'0.{bow}'))
        user.edit('balance', user.balance + price)
        return await message.reply(f'üé≥ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –∏ —É–≤–µ–ª–∏—á–∏–ª–∏ —Å—Ç–∞–≤–∫—É –≤ (x0.{bow}) —Å—Ç–∞–≤–∫–∞ –ø–æ—Å–ª–µ –≤—ã–∏–≥—Ä—ã—à–∞: '
                                   f'{to_str(summ + price)}',
                                   reply_markup=play_bowling_kb)
    else:
        price = summ
        user.edit('balance', user.balance + price)
        return await message.reply(f'üé≥ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –∏ —É–≤–µ–ª–∏—á–∏–ª–∏ —Å—Ç–∞–≤–∫—É –≤ (x2) —Å—Ç–∞–≤–∫–∞ –ø–æ—Å–ª–µ –≤—ã–∏–≥—Ä—ã—à–∞: '
                                   f'{to_str(summ + price)}',
                                   reply_markup=play_bowling_kb)
