import random

from aiogram.types import Message

from config import bot_name
from keyboard.games import play_nvuti_kb
from keyboard.generate import show_balance_kb
from utils.logs import writelog
from utils.main.cash import to_str, get_cash
from utils.main.users import User


async def nvuti_handler(message: Message):
    arg = message.text.split()[1:] if not bot_name.lower() in message.text.split()[0].lower() else message.text.split()[2:]
    if len(arg) < 2 or not arg[1] in ['<', '>', '=']:
        return await message.reply('‚ùå –û—à–∏–±–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `–ù–≤—É—Ç–∏ {—Å—Ç–∞–≤–∫–∞} {–∑–Ω–∞–∫ (<,>,=)}`', parse_mode='markdown')

    user = User(user=message.from_user)

    try:
        summ = get_cash(arg[0] if arg[0].lower() not in ['–≤—Å—ë', '–≤—Å–µ'] else str(user.balance))
    except:
        summ = 0
    if summ <= 0:
        return await message.reply('‚ùå –û—à–∏–±–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `–ù–≤—É—Ç–∏ {—Å—Ç–∞–≤–∫–∞} {–∑–Ω–∞–∫ (<,>,=)}`', parse_mode='markdown')
    znak = arg[1]

    if user.balance < summ:
        return await message.reply('‚ùå –û—à–∏–±–∫–∞. –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ —Ä—É–∫–∞—Ö –¥–ª—è —Å—Ç–∞–≤–∫–∏! üí∏',
                                   reply_markup=show_balance_kb)

    result = random.randint(1, 100)
    if result < 50 and znak == '<':
        znak_result = 'üìâ'
        win = True
    elif result == 50 and znak == '=':
        znak_result = 'üìà'
        win = True
    elif result > 50 and znak == '>':
        znak_result = 'üìà'
        win = True
    else:
        znak_result = 'üìà' if result >= 50 else 'üìâ'
        win = False

    if not win:
        user.edit('balance', user.balance - summ)
        await message.reply(f'{znak_result} –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏, —á–∏—Å–ª–æ {result} –Ω–µ {znak} 50', parse_mode='markdown',
                            reply_markup=play_nvuti_kb)
        await writelog(message.from_user.id, f'–ù–≤—É—Ç–∏ –∏ –ø—Ä–æ–∏–≥—Ä—ã—à')
        return

    user.edit('balance', user.balance + (int(summ * 1.5) - summ))
    await message.reply(f'{znak_result} –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏, —á–∏—Å–ª–æ {result} {znak} 50 –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –∑–∞—á–∏—Å–ª–µ–Ω–æ +'
                        f'{to_str(int(summ * 1.5))}'.replace('<code>', '`').replace('</code>',
                                                                                    '`'),
                        parse_mode='markdown',
                        reply_markup=play_nvuti_kb)
    await writelog(message.from_user.id, f'–ù–≤—É—Ç–∏ –∏ –ø–æ–±–µ–¥–∞')
    return
