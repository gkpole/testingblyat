from aiogram.types import Message

from config import bot_name
from keyboard.generate import buy_airplane_kb, show_balance_kb, show_inv_kb, show_airplane_kb, airplane_kb, \
    ride_airplane_kb
from utils.logs import writelog
from utils.main.airplanes import airplanes, Airplane
from utils.main.cash import to_str, get_cash
from utils.main.db import sql


async def airplanes_list_handler(message: Message):
    text = '–ù–∞–∑–≤–∞–Ω–∏–µ - —Ü–µ–Ω–∞ - —Å—Ç–æ–∫ - –Ω–∞–ª–æ–≥\n'
    asd = sql.execute(f'SELECT sell_count FROM users WHERE id = {message.from_user.id}', False, True)[0][0]
    if asd is None:
        asd = 0
    xa = asd = float(f'0.{asd}')
    for index, i in airplanes.items():
        price = i["price"] - int(i["price"] * xa)
        text += f'<code>{index}</code>. {i["name"]} - {to_str(price)} - {i["fuel"]}' \
                f' - {to_str(i["nalog"])}\n'
    return await message.reply(
        f'<i>(–í–∞—à–∞ —Å–∫–∏–¥–∫–∞: x{asd})</i>\n\n'
        + text + '\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>–°–∞–º–æ–ª—ë—Ç –∫—É–ø–∏—Ç—å {–Ω–æ–º–µ—Ä}</code> —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å!',
        reply_markup=buy_airplane_kb)


async def airplanes_handler(message: Message):
    arg = message.text.split()[1:] if not bot_name.lower() in message.text.split()[0].lower() else message.text.split()[2:]
    try:
        airplane = Airplane(user_id=message.from_user.id)
    except:
        airplane = None
        if len(arg) < 1 or arg[0].lower() != '–∫—É–ø–∏—Ç—å' or not arg[1].isdigit():
            return await airplanes_list_handler(message)
    if len(arg) == 0:
        return await message.reply(text=airplane.text, reply_markup=airplane_kb)
    elif arg[0].lower() in ['—Å–ø–∏—Å–æ–∫', '–ª–∏—Å—Ç']:
        return await airplanes_list_handler(message)

    elif arg[0].lower() == '–ø—Ä–æ–¥–∞—Ç—å':
        doxod = airplane.sell()
        sql.execute(f'UPDATE users SET bank = bank + {doxod} WHERE id = {message.from_user.id}')
        await message.reply(f'‚úÖ –í—ã –ø—Ä–æ–¥–∞–ª–∏ —Å–∞–º–æ–ª—ë—Ç –∏ —Å —É—á—ë—Ç–æ–º –Ω–∞–ª–æ–≥–æ–≤, –∏ –¥–æ—Ö–æ–¥–∞ –≤—ã –ø–æ–ª—É—á–∏–ª–∏: {to_str(doxod)}',
                            reply_markup=show_balance_kb)
        await writelog(message.from_user.id, f'–°–∞–º–æ–ª—ë—Ç –ø—Ä–æ–¥–∞–∂–∞')
        return
    elif arg[0].lower() == '–∫—É–ø–∏—Ç—å':
        if airplane:
            return await message.reply('‚ùó –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Å–∞–º–æ–ª—ë—Ç, –º–æ–∂–Ω–æ –∏–º–µ—Ç—å —Ç–æ–ª—å–∫–æ 1.',
                                       reply_markup=show_airplane_kb)
        try:
            i = airplanes[int(arg[1])]
        except:
            return await message.reply('‚ùå –û—à–∏–±–∫–∞. –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Å–∞–º–æ–ª—ë—Ç—ã!')
        xa = sql.execute(f'SELECT sell_count, balance FROM users WHERE id = {message.from_user.id}', False, True)[0]
        balance = xa[1]
        xa = xa[0]
        if xa is None:
            xa = 0
        xa = float(f'0.{xa}')
        price = i["price"] - int(i["price"] * xa)

        if balance < price:
            return await message.reply(
                f'üí≤ –ù–∞ —Ä—É–∫–∞—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏, –Ω—É–∂–Ω–æ: {to_str(price)}')
        Airplane.create(user_id=message.from_user.id, airplane_index=int(arg[1]))
        sql.execute(f'UPDATE users SET balance = balance - {price}, sell_count = 0 WHERE id ='
                    f' {message.from_user.id}', True)
        await message.reply(f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Å–∞–º–æ–ª—ë—Ç <b>{i["name"]}</b> –∑–∞'
                            f' {to_str(price)}', reply_markup=show_airplane_kb)
        await writelog(message.from_user.id, f'–°–∞–º–æ–ª—ë—Ç –ø–æ–∫—É–ø–∫–∞')
        return
    elif arg[0].lower() in ['—Å–Ω—è—Ç—å', '–¥–æ—Ö–æ–¥']:
        xd = airplane.cash
        if len(arg) > 1:
            try:
                xd = get_cash(arg[1])
            except:
                pass
        if airplane.cash < xd or airplane.cash < 0:
            return await message.reply('üí≤ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ —Å—á–µ—Ç—É —Å–∞–º–æ–ª—ë—Ç—ã!')
        elif xd <= 0:
            return await message.reply('‚ùå –ù–µ–ª—å–∑—è —Ç–∞–∫!')
        sql.executescript(f'''UPDATE users SET bank = bank + {xd} WHERE id = {message.from_user.id};
                              UPDATE airplanes SET cash = cash - {xd} WHERE id = {airplane.id};''',
                          True)

        await message.reply(f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ —Å–Ω—è–ª–∏ {to_str(xd)} —Å –ø—Ä–∏–±—ã–ª–∏ —Å–∞–º–æ–ª—ë—Ç–∞!', reply_markup=show_balance_kb)
        await writelog(message.from_user.id, f'–°–Ω—è—Ç–∏–µ —Å –ø—Ä–∏–±—ã–ª–∏ —Å–∞–º–æ–ª—ë—Ç–∞.')
        return
    elif arg[0].lower() in ['–µ—Ö–∞—Ç—å', '–∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å', '–∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å', '—Ä–∞–±–æ—Ç–∞—Ç—å',
                            '—Ä–∞–±–æ—Ç–∞', '–ª–µ—Ç–µ—Ç—å', '–ª–µ—Ç–∞—Ç—å']:
        if airplane.fuel <= 0:
            return await message.reply('‚úàÔ∏è –°–∞–º–æ–ª—ë—Ç –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç –ª–µ—Ç–∞—Ç—å! –ï–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: 0%\n'
                                       '–í–∞–º –Ω—É–∂–Ω–æ <b>–ë–æ–ª—Ç–∏–∫ üî©</b> (x10) —á—Ç–æ–±—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å 1%\n\n–í–≤–µ–¥–∏—Ç–µ <code>'
                                       ' –°–∞–º–æ–ª—ë—Ç –ø–æ—á–∏–Ω–∏—Ç—å</code> —á—Ç–æ–±—ã –ø–æ—á–∏–Ω–∏—Ç—å —Å–∞–º–æ–ª—ë—Ç', reply_markup=show_airplane_kb)
        elif airplane.energy <= 0:
            return await message.reply('‚ö° –£ —Å–∞–º–æ–ª—ë—Ç—ã —Ä–∞–∑—Ä—è–¥–∏–ª—Å—è –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ —á—Ç–æ–±—ã –æ–Ω –∑–∞—Ä—è–¥–∏–ª—Å—è!')

        doxod = airplane.ride()
        await message.reply(f'‚úàÔ∏èÔ∏è –í—ã –ø—Ä–æ–µ—Ö–∞–ª–∏ {doxod[0]} –∫–º. –∏ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ {to_str(doxod[1])}'
                            f' –Ω–∞ —Å—á—ë—Ç —Å–∞–º–æ–ª—ë—Ç—ã! (-1‚ö°) (-1‚õΩ)\n'
                            f'‚ö° –¢–µ–∫—É—â–∞—è —ç–Ω–µ—Ä–≥–∏—è: {airplane.energy}\n'
                            f'‚õΩ –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∞–º–æ–ª—ë—Ç—ã: {airplane.fuel}%', reply_markup=ride_airplane_kb)
        await writelog(message.from_user.id, f'–°–∞–º–æ–ª—ë—Ç –ª–µ—Ç–µ—Ç—å')
        return

    elif arg[0].lower() in ['–ø–æ—á–∏–Ω–∏—Ç—å', '—á–∏–Ω–∏—Ç—å', '–ø–æ—á–∏–Ω–∫–∞']:
        items = sql.execute(f'SELECT items FROM users WHERE id = {message.from_user.id}', False, True)[0][0]
        if '22:' not in items:
            return await message.reply('‚ùå –£ –≤–∞—Å –Ω–µ—Ç <b>–ë–æ–ª—Ç–∏–∫ üî©</b> (x10) –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ!',
                                       reply_markup=show_inv_kb)
        count = int(items.split('22:')[1].split(',')[0])
        if count < 10:
            return await message.reply(f'‚ùå –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç {10 - count} <b>–ë–æ–ª—Ç–∏–∫–æ–≤ üî©</b> –¥–ª—è –ø–æ—á–∏–Ω–∫–∏!',
                                       reply_markup=show_inv_kb)
        user_items = [[int(x.split(':')[0]), int(x.split(':')[1])] for x in items.split(',') if x]
        for index, i in enumerate(user_items):
            if i[0] == 22:
                break
        user_items[index] = [22, i[1] - 10]
        if (i[1] - 10) <= 0:
            user_items.remove(user_items[index])
        str_items = ','.join(f'{x[0]}:{x[1]}' for x in user_items if x)
        sql.executescript(f'UPDATE users SET items = "{str_items}" WHERE id = {message.from_user.id};\n'
                          f'UPDATE airplanes SET fuel = fuel + 1 WHERE id = {airplane.id};')
        await message.reply('‚úÖ –°–∞–º–æ–ª—ë—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ +1%')
        await writelog(message.from_user.id, f'–°–∞–º–æ–ª—ë—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ')
        return

    elif arg[0].lower() in ['–æ–ø–ª–∞—Ç–∞', '–æ–ø–ª–∞—Ç–∏—Ç—å', '–Ω–∞–ª–æ–≥', '–Ω–∞–ª–æ–≥–∏']:
        xd = airplane.nalog
        if len(arg) > 1:
            try:
                xd = get_cash(arg[1])
            except:
                pass
        if airplane.nalog < 1:
            return await message.reply('üí≤ –ù–∞–ª–æ–≥ –Ω–∞ —Å–∞–º–æ–ª—ë—Ç –∏ —Ç–∞–∫ –æ–ø–ª–∞—á–µ–Ω!')
        elif airplane.nalog < xd:
            xd = airplane.nalog
        elif xd <= 0:
            return await message.reply('‚ùå –ù–µ–ª—å–∑—è —Ç–∞–∫!')
        if sql.execute(f'SELECT bank FROM users WHERE id = {message.from_user.id}', False, True)[0][0] < xd:
            return await message.reply(f'üí≤ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –≤ –±–∞–Ω–∫–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã –Ω–∞–ª–æ–≥–∞, –Ω—É–∂–Ω–æ: {to_str(xd)}!',
                                       reply_markup=show_balance_kb)

        sql.executescript(f'''UPDATE users SET bank = bank - {xd} WHERE id = {message.from_user.id};
                              UPDATE airplanes SET nalog = {airplane.nalog - xd} WHERE id = {airplane.id};''',
                          True)

        await message.reply('‚úÖ –ù–∞–ª–æ–≥ –Ω–∞ —Å–∞–º–æ–ª—ë—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω!')
        await writelog(message.from_user.id, f'–°–∞–º–æ–ª—ë—Ç –Ω–∞–ª–æ–≥ –æ–ø–ª–∞—Ç–∞')
        return
    else:
        return await message.reply('‚ùå –û—à–∏–±–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>–°–∞–º–æ–ª—ë—Ç [—Å–Ω—è—Ç—å|–æ–ø–ª–∞—Ç–∏—Ç—å|–µ—Ö–∞—Ç—å] *{—Å—É–º–º–∞}</code>')
