from aiogram.types import Message

from keyboard.countries import join_to_country_kb
from utils.countries import Country
from utils.main.cash import get_cash, to_str
from utils.main.db import sql


async def leave_from_country_handler(message: Message):
    country = Country.get_by_user(user_id=message.from_user.id)
    if country is None:
        return await message.reply('üòê –í—ã –∂–∏–≤—ë—Ç–µ –Ω–∞ –±–µ–∑–ª—é–¥–Ω–æ–º –æ—Å—Ç—Ä–æ–≤–µ.\n',
                                   reply_markup=join_to_country_kb())
    elif country.owner != message.from_user.id:
        return await message.reply('üòê –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–º —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω—ã.')

    country.editmany(last_owner=message.from_user.id,
                     owner=None)

    return await message.reply(f'‚õî –í—ã —É—à–ª–∏ —Å –ø–æ—Å—Ç–∞ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞ —Å—Ç—Ä–∞–Ω—ã {country.full_name}')


async def get_country_handler(message: Message):
    country = Country.get_by_user(user_id=message.from_user.id)
    if country is None:
        return await message.reply('üòê –í—ã –∂–∏–≤—ë—Ç–µ –Ω–∞ –±–µ–∑–ª—é–¥–Ω–æ–º –æ—Å—Ç—Ä–æ–≤–µ.\n',
                                   reply_markup=join_to_country_kb())
    elif country.owner is not None:
        return await message.reply(f'üòê –£ —Å—Ç—Ä–∞–Ω—ã {country.full_name} —É–∂–µ –µ—Å—Ç—å –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç!')

    country.editmany(owner=message.from_user.id)

    return await message.reply(f'‚úÖ –í—ã –ø—Ä–∏–Ω—è–ª–∏ –ø–æ—Å—Ç –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞ —Å—Ç—Ä–∞–Ω—ã {country.full_name}!')


async def snyat_budget_country(message: Message):
    country = Country.get_by_user(user_id=message.from_user.id)
    if country is None:
        return await message.reply('üòê –í—ã –∂–∏–≤—ë—Ç–µ –Ω–∞ –±–µ–∑–ª—é–¥–Ω–æ–º –æ—Å—Ç—Ä–æ–≤–µ.\n',
                                   reply_markup=join_to_country_kb())
    elif country.owner != message.from_user.id:
        return await message.reply('üòê –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–º —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω—ã.')\

    try:
        arg = get_cash(message.text.split()[2]) if message.text.split()[2].lower() not in ['–≤—Å—ë', '–≤—Å–µ'] else \
            country.balance
    except:
        return await message.reply('ü§î –ù–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω–∞ —Å—É–º–º–∞ –¥–ª—è —Å–Ω—è—Ç–∏—è —Å –±–∞–ª–∞–Ω—Å–∞ —Å—Ç—Ä–∞–Ω—ã!')

    if arg <= 0:
        return await message.reply('‚õî –°—É–º–º–∞ –¥–ª—è —Å–Ω—è—Ç–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0!')

    elif arg > country.balance:
        return await message.reply('‚õî –ù–∞ –±–∞–ª–∞–Ω—Å–µ —Å—Ç—Ä–∞–Ω—ã –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!')

    country.editmany(balance=country.balance - arg)
    sql.execute(f'UPDATE users SET balance = balance + {arg} WHERE id = {message.from_user.id}',
                True, False)
    return await message.reply(f'üí∏ –í—ã —Å–Ω—è–ª–∏ {to_str(arg)} —Å –±–∞–ª–∞–Ω—Å–∞ —Å—Ç—Ä–∞–Ω—ã {country.full_name}!')


async def give_budget_country(message: Message):
    country = Country.get_by_user(user_id=message.from_user.id)
    if country is None:
        return await message.reply('üòê –í—ã –∂–∏–≤—ë—Ç–µ –Ω–∞ –±–µ–∑–ª—é–¥–Ω–æ–º –æ—Å—Ç—Ä–æ–≤–µ.\n',
                                   reply_markup=join_to_country_kb())
    elif country.owner != message.from_user.id:
        return await message.reply('üòê –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–º —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω—ã.')
    try:
        bal =  sql.execute(f'SELECT balance FROM users WHERE id = {message.from_user.id}',
                           False, True)[0][0]
        arg = get_cash(message.text.split()[2]) if message.text.split()[2].lower() not in ['–≤—Å—ë', '–≤—Å–µ'] else \
        bal
                
    except:
        return await message.reply('ü§î –ù–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω–∞ —Å—É–º–º–∞ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ —Å—Ç—Ä–∞–Ω—ã!')

    if arg <= 0:
        return await message.reply('‚õî –°—É–º–º–∞ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 0!')

    elif arg > bal:
        return await message.reply('‚õî –ù–∞ –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!')

    country.editmany(balance=country.balance + arg)
    sql.execute(f'UPDATE users SET balance = balance - {arg} WHERE id = {message.from_user.id}',
                True, False)
    return await message.reply(f'üí∏ –í—ã –ø–æ–ø–æ–ª–Ω–∏–ª–∏ –±–∞–ª–∞–Ω—Å —Å—Ç—Ä–∞–Ω—ã {country.full_name} –Ω–∞ +{to_str(arg)}!')
