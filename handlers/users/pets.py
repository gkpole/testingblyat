import random

from aiogram.types import Message

from utils.logs import writelog
from utils.main.cash import to_str
from utils.main.users import User
from utils.pets.pets import pets
from utils.photos.photos import get_photo, set_photo


async def pets_handler(message: Message):
    arg = message.text.split()[1:]
    if len(arg) == 0:
        t = '\n'.join(f'<code>{index}</code> ‚Ä¢ <b>{i["name"]} {i["emoji"]}</b> ‚Äî {to_str(i["price"])}' for index,
                                                                                                           i in
                      pets.items())
        return await message.reply(text=f'üêá –°–ø–∏—Å–æ–∫ –ø–∏—Ç–æ–º—Ü–µ–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏:\n\n'
                                        + t + '\n\n‚úÖ –í–≤–µ–¥–∏—Ç–µ: <code>pet –∫—É–ø–∏—Ç—å '
                                              '{–Ω–æ–º–µ—Ä}</code> —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å '
                                              '–ø–∏—Ç–æ–º—Ü–∞')

    user = User(user=message.from_user)
    user.pets = list(user.pets)

    if arg[0].lower() == '–∫—É–ø–∏—Ç—å':
        try:
            index = int(arg[1])
            if index not in pets:
                raise Exception('132')
        except:
            return await message.reply('‚ùå –û—à–∏–±–∫–∞. –ù–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥—ë–Ω –Ω–æ–º–µ—Ä –ø–∏—Ç–æ–º—Ü–∞!')
        pet = pets[index]
        if user.balance < pet['price']:
            return await message.reply('üí∏ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!')
        user.pets.append(index)
        corm = random.randint(1, 5)
        user.editmany(balance=user.balance - pet['price'], pets=','.join(str(x) for x in user.pets))
        user.items = list(user.items)
        user.set_item(item_id=1, x=corm)
        msg = await message.reply_photo(photo=get_photo(f'pets/{index}'),
                                        caption=f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –ø–∏—Ç–æ–º—Ü–∞ <b>{pet["name"]} {pet["emoji"]}'
                                                f' (<code>x1</code>)</b>\n'
                                                f'ü•ú –í –¥–æ–±–∞–≤–æ–∫ –ø–æ–ª—É—á–∏–ª–∏ (<code>x{corm}</code>) –ø–∞—á–µ–∫ –∫–æ—Ä–º–∞!')
        set_photo(f'pets/{index}', msg.photo[-1].file_id)
        await writelog(message.from_user.id, f'–ü–æ–∫—É–ø–∫–∞ –ø–∏—Ç–æ–º—Ü–∞ <b>{pet["name"]} {pet["emoji"]}</b>')
        return
    elif arg[0].lower() == '–º–æ–∏':
        text = 'üêá –í–∞—à–∏ –ø–∏—Ç–æ–º—Ü—ã: \n\n'
        completed = []
        for index, i in enumerate(user.pets, start=1):
            if i in completed:
                continue
            completed.append(i)
            text += f'<code>{index}</code> ‚Ä¢ <b>{pets[i]["name"]} (<code>x{user.pets.count(i)}</code>) ' \
                    f'{pets[i]["emoji"]}</b>'
        if text == 'üêá –í–∞—à–∏ –ø–∏—Ç–æ–º—Ü—ã: \n\n':
            return await message.reply('üêá –£ —Ç–µ–±—è –Ω–µ—Ç –ø–∏—Ç–æ–º—Ü–µ–≤! :(')
        return await message.reply(text=text)
    elif arg[0].lower() == '–ø—Ä–æ–¥–∞—Ç—å':
        try:
            index = int(arg[1])
            if index < 1:
                raise Exception('1')
        except:
            return await message.reply('‚ùå –û—à–∏–±–∫–∞. –ù–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥—ë—Ç –Ω–æ–º–µ—Ä –ø–∏—Ç–æ–º—Ü–∞!')
        if index > len(user.pets):
            return await message.reply('‚ùå –û—à–∏–±–∫–∞. –£ –≤–∞—Å –Ω–µ—Ç —ç—Ç–æ–≥–æ –ø–∏—Ç–æ–º—Ü–∞!')
        xd = user.pets[index - 1]
        pet = pets[xd]
        user.pets.remove(xd)
        user.editmany(balance=user.balance + int(pet['price'] // 1.5), pets=','.join(str(x) for x in user.pets))
        msg = await message.reply_photo(
            photo=get_photo(f'pets/{xd}'),
            caption=f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–∞–ª–∏ –ø–∏—Ç–æ–º—Ü–∞ '
                    f'<b>{pet["name"]} {pet["emoji"]} (<code>x1</code>)</b> –∏ –ø–æ–ª—É—á–∏–ª–∏ '
                    f'+{to_str(int(pet["price"] // 1.4))}')
        set_photo(f'pets/{xd}', msg.photo[-1].file_id)
        await writelog(message.from_user.id, f'–ü—Ä–æ–¥–∞–∂–∞ –ø–∏—Ç–æ–º—Ü–∞ <b>{pet["name"]} {pet["emoji"]}</b>')
        return
    else:
        return await message.reply('‚ùå –û—à–∏–±–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: <code>–ø–∏—Ç–æ–º—Ü—ã [–∫—É–ø–∏—Ç—å|–º–æ–∏|–ø—Ä–æ–¥–∞—Ç—å] {<i>–Ω–æ–º–µ—Ä</i>}</code>')
